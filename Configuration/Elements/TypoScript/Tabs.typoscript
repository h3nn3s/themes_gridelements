lib.gridelements {
	tabs {
		setCurrent = navigation,navigation-tabs
		setCurrent {
			override.dataWrap = navigation,{field:tx_themes_behaviour},{field:tx_themes_responsive},{field:tx_themes_variants}
			override.if.isTrue.dataWrap = {field:tx_themes_behaviour},{field:tx_themes_responsive},{field:tx_themes_variants}
			postUserFunc = KayStrobach\Themes\Frontend\CssClassMapper->mapGenericToFramework
			postUserFunc {
				variantsMapping =< lib.content.cssMap.variants
				responsiveMapping =< lib.content.cssMap.responsive
				behaviourMapping =< lib.content.cssMap.behaviour.tabs.navigation
			}
		}
		cObject = FLUIDTEMPLATE
		cObject {
			file = EXT:themes_gridelements/Resources/Private/Templates/Elements/Tabs.html
		}
		columns.0 {
			renderObj =< tt_content
			renderObj.stdWrap {
				preCObject = LOAD_REGISTER
				preCObject {
					containerId.dataWrap = tab-content-{field:uid}
					containerClasses {
						dataWrap = tab-pane,{field:parentgrid_tx_themes_behaviour}
						outerWrap = |,active
						outerWrap.if {
							value = 1
							equals.data = cObj:parentRecordNumber
							equals.prioriCalc = 1
						}
						postUserFunc = KayStrobach\Themes\Frontend\CssClassMapper->mapGenericToFramework
						postUserFunc {
							behaviourMapping =< lib.content.cssMap.behaviour.tabs.panes
						}
					}
				}
				wrap2 = <div role="tabpanel" id="{register:containerId}" class="{register:containerClasses}">|</div>
				wrap2.insertData = 1
				append = RESTORE_REGISTER
			}
		}
	}
}

tt_content.gridelements_pi1.20.10.setup.tabs < lib.gridelements.tabs